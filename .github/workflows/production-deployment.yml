name: Deploy To  Production

on:
  push:
    tags:
      - '*'
jobs:
  Smoke-Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '*'
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        run: npm run test:ci
      - name: Build Application
        run: npm run build:ci

  Deploy:
    needs: Smoke-Testing
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  Create-Release:
    needs: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Extract Release Notes
        run: |
          raw_release_notes=$(perl -0777 -ne 'print $& if /^([\s\S]*?)((#+ \[\d+\.\d+\.\d+)[\s\S]*?)(?=#+ \[\d+\.\d+\.\d+)/m' CHANGELOG.md)
          printf -v release_notes "%s" "$raw_release_notes"
          echo "$release_notes" > release_notes.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{github.ref_name}}
          tag_name: ${{github.ref_name}}
          body_path: release_notes.md

  Sync-Branches:
    needs: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Set Git Config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      - name: Merge `main` Back To `development`
        run: |
          git fetch --unshallow
          git checkout dev
          git pull
          git merge --no-ff master -m "chore: ðŸ”€ Merge main into development"
          git push
